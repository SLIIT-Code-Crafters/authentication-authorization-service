server.servlet.context-path=/trip-schedule-management-auth
server.port=${SERVER_PORT:8080}

# Access Log Properties
#server.tomcat.basedir=/logs/trip-management-auth
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
server.tomcat.accesslog.pattern=%h %l %u %t %r %s %b %D
server.tomcat.accesslog.buffered=false

spring.datasource.url=jdbc:postgresql://${WRITE_DB_HOST:aws-postgres-db-instance.cvoc4wi4i6sp.ap-southeast-1.rds.amazonaws.com}:5432/${WRITE_DB_NAME:tsm_db}
spring.datasource.username=${WRITE_DB_USERNAME:postgres}
spring.datasource.password=${WRITE_DB_PW:1qaz2wsx}
spring.datasource.driverClassName=org.postgresql.Driver
tsms.default.timeZone = ${TIME_ZONE:Asia/Colombo}


spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update

################ JWT TOKEN ###################
secretKey=${SECRET_KEY:wYrHmUm5AuqKcgjkkl59ILMT7Ol+fB69uLAuT+JxzjdipxdFGlxFWXqi6i3gELYE}
tokenExpirationTime=1000+(60*24)

############### Approval Reqest API ###################
approvalRequestApi=${APPROVAL_REQUEST_API:http://localhost:8081/trip-management/api/v1/private/approval/save?requestId=callFromAuthService}

############### Admin Approval Status API ###################
adminApprovalStatusApi=${ADMIN_APPROVAL_STATUS_API:http://localhost:8081/trip-management/api/v1/private/approval/get-by-id-email/}

############### Email Send API ###################
emailSendApi=${EMAIL_SEND_API:http://localhost:8082/notification-scheduler/api/v1/private/notification/send/email?requestId=callFromAuthService}